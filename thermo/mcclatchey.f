      subroutine mccla( ctype, np, z, p, t, rvden, o3den, den )
cf2py intent(in) np,ctype
cf2py intent(out) z,p,t,rvden,o3den,den 
cf2py depend(np) z,p,t,rvden,o3den,den 
c     np must be 33

c         return mcclatchey model atmospheres

c         input: ctype: 'tropics', 'midsummer', 'midwinter'
c                       'subsummer', 'subwinter' (character variable)
c                       (be sure to use lowercase)

c        z=height [m]; p=pressure [pa]; t=temperature [k]
c        rvden=mixing ratio [kg/kg]; o3den=ozone[kg/cu m]
c        den=air density [kg/cu m]

c        ref.: r.a. mcclatchey et al, 1972, afcrl-72-0497

c     .. parameters ..

      integer   np,nfixed
      parameter (nfixed=33)
c     ..
c     .. scalar arguments ..

      character ctype*( * )
c     ..
c     .. array arguments ..

      real      den( np ), o3den( np ), p( np ), rvden( np ), t( np ),
     &          z( np )
c     ..
c     .. local scalars ..

      integer   i, itype
c     ..
c     .. local arrays ..

      real      aden( nfixed, 5 ), ao3den( nfixed, 5 ), ap( nfixed, 5 ),
     &          arvden( nfixed, 5 ), at( nfixed, 5 ), az( nfixed, 5 )
c     ..

c          tropical atmosphere

      data ( az(i,1), ap(i,1), at(i,1), arvden(i,1), ao3den(i,1), 
     & aden(i,1), i=1,17)/
     &100.0,   0.001,  210.000,  1.630e-09,  4.300e-11,  5.000e-04,
     & 70.0,   0.058,  219.000,  2.990e-07,  8.600e-08,  9.210e-02,
     & 50.0,   0.854,  270.000,  3.580e-06,  4.300e-06,  1.101e+00,
     & 45.0,   1.590,  265.000,  6.820e-06,  1.300e-05,  2.097e+00,
     & 40.0,   3.050,  254.000,  1.360e-05,  4.100e-05,  4.181e+00,
     & 35.0,   6.000,  243.000,  2.800e-05,  9.200e-05,  8.600e+00,
     & 30.0,  12.200,  232.000,  5.950e-05,  2.400e-04,  1.831e+01,
     & 25.0,  25.700,  221.000,  1.310e-04,  3.400e-04,  4.045e+01,
     & 24.0,  30.000,  219.000,  1.550e-04,  3.400e-04,  4.763e+01,
     & 23.0,  35.000,  217.000,  1.830e-04,  3.200e-04,  5.618e+01,
     & 22.0,  40.900,  215.000,  2.160e-04,  2.800e-04,  6.645e+01,
     & 21.0,  48.000,  211.000,  2.580e-04,  2.400e-04,  7.938e+01,
     & 20.0,  56.500,  207.000,  3.090e-04,  1.900e-04,  9.515e+01,
     & 19.0,  66.600,  203.000,  3.720e-04,  1.400e-04,  1.145e+02,
     & 18.0,  78.900,  199.000,  4.490e-04,  9.000e-05,  1.382e+02,
     & 17.0,  93.700,  195.000,  5.450e-04,  6.900e-05,  1.676e+02,
     & 16.0, 111.000,  197.000,  6.370e-04,  4.700e-05,  1.972e+02 /

      data ( az(i,1), ap(i,1), at(i,1), arvden(i,1), ao3den(i,1), 
     & aden(i,1), i=18,33)/
     & 15.0, 132.000,  204.000,  7.570e-04,  4.700e-05,  2.260e+02,
     & 14.0, 156.000,  210.000,  9.860e-04,  4.500e-05,  2.578e+02,
     & 13.0, 182.000,  217.000,  1.790e-03,  4.500e-05,  2.929e+02,
     & 12.0, 213.000,  224.000,  6.080e-03,  4.300e-05,  3.316e+02,
     & 11.0, 247.000,  230.000,  1.790e-02,  4.100e-05,  3.740e+02,
     & 10.0, 286.000,  237.000,  4.900e-02,  3.900e-05,  4.202e+02,
     &  9.0, 329.000,  244.000,  1.210e-01,  3.900e-05,  4.708e+02,
     &  8.0, 378.000,  250.000,  2.500e-01,  3.900e-05,  5.258e+02,
     &  7.0, 432.000,  257.000,  4.710e-01,  4.100e-05,  5.855e+02,
     &  6.0, 492.000,  264.000,  8.600e-01,  4.300e-05,  6.501e+02,
     &  5.0, 559.000,  270.000,  1.530e+00,  4.500e-05,  7.199e+02,
     &  4.0, 633.000,  277.000,  2.660e+00,  4.700e-05,  7.951e+02,
     &  3.0, 715.000,  284.000,  4.700e+00,  5.100e-05,  8.756e+02,
     &  2.0, 805.000,  288.000,  9.290e+00,  5.400e-05,  9.689e+02,
     &  1.0, 904.000,  294.000,  1.300e+01,  5.600e-05,  1.064e+03,
     &  0.0,1013.000,  300.000,  1.900e+01,  5.600e-05,  1.167e+03 /

c            midlatitude summer

      data ( az(i,2), ap(i,2), at(i,2), arvden(i,2), ao3den(i,2), 
     & aden(i,2), i=1,17)/
     &100.0,   0.001,  210.000,  2.000e-09,  4.300e-11,  5.000e-04,
     & 70.0,   0.067,  218.000,  2.680e-07,  8.600e-08,  6.706e-02,
     & 50.0,   0.951,  276.000,  3.800e-06,  4.300e-06,  9.512e-01,
     & 45.0,   1.760,  270.000,  7.030e-06,  1.300e-05,  1.757e+00,
     & 40.0,   3.330,  258.000,  1.330e-05,  4.100e-05,  3.330e+00,
     & 35.0,   6.520,  245.000,  2.610e-05,  9.200e-05,  6.519e+00,
     & 30.0,  13.200,  234.000,  5.290e-05,  2.000e-04,  1.322e+01,
     & 25.0,  27.700,  224.000,  1.720e-04,  3.000e-04,  4.288e+01,
     & 24.0,  32.200,  223.000,  2.010e-04,  3.200e-04,  5.014e+01,
     & 23.0,  37.600,  222.000,  2.350e-04,  3.400e-04,  5.867e+01,
     & 22.0,  43.700,  220.000,  2.750e-04,  3.600e-04,  6.872e+01,
     & 21.0,  51.000,  219.000,  3.220e-04,  3.600e-04,  8.056e+01,
     & 20.0,  59.500,  218.000,  3.780e-04,  3.400e-04,  9.453e+01,
     & 19.0,  69.500,  217.000,  4.440e-04,  3.200e-04,  1.110e+02,
     & 18.0,  81.200,  216.000,  5.220e-04,  2.800e-04,  1.305e+02,
     & 17.0,  95.000,  216.000,  6.140e-04,  2.400e-04,  1.535e+02,
     & 16.0, 111.000,  216.000,  7.190e-04,  2.100e-04,  1.797e+02 /

      data ( az(i,2), ap(i,2), at(i,2), arvden(i,2), ao3den(i,2), 
     & aden(i,2), i=18,33)/
     & 15.0, 130.000,  216.000,  8.420e-04,  1.900e-04,  2.104e+02,
     & 14.0, 153.000,  216.000,  9.950e-04,  1.800e-04,  2.464e+02,
     & 13.0, 179.000,  216.000,  1.660e-03,  1.500e-04,  2.882e+02,
     & 12.0, 209.000,  222.000,  6.460e-03,  1.200e-04,  3.269e+02,
     & 11.0, 243.000,  229.000,  2.190e-02,  1.100e-04,  3.693e+02,
     & 10.0, 281.000,  235.000,  6.430e-02,  9.000e-05,  4.159e+02,
     &  9.0, 324.000,  242.000,  1.180e-01,  8.600e-05,  4.669e+02,
     &  8.0, 372.000,  248.000,  2.100e-01,  7.900e-05,  5.225e+02,
     &  7.0, 426.000,  255.000,  3.710e-01,  7.500e-05,  5.830e+02,
     &  6.0, 487.000,  261.000,  6.090e-01,  6.900e-05,  6.487e+02,
     &  5.0, 554.000,  267.000,  1.000e+00,  6.600e-05,  7.211e+02,
     &  4.0, 628.000,  273.000,  1.890e+00,  6.400e-05,  7.998e+02,
     &  3.0, 710.000,  279.000,  3.430e+00,  6.200e-05,  8.846e+02,
     &  2.0, 802.000,  285.000,  5.850e+00,  6.000e-05,  9.757e+02,
     &  1.0, 902.000,  290.000,  9.300e+00,  6.000e-05,  1.080e+03,
     &  0.0,1013.000,  294.000,  1.400e+01,  6.000e-05,  1.191e+03 /

c            midlatitude winter

      data ( az(i,3), ap(i,3), at(i,3), arvden(i,3), ao3den(i,3), 
     & aden(i,3), i=1,17)/
     &100.0,   0.001,  210.200,  2.000e-09,  4.300e-11,  5.000e-04,
     & 70.0,   0.047,  230.700,  2.820e-07,  8.600e-08,  7.051e-02,
     & 50.0,   0.682,  265.700,  3.580e-06,  4.300e-06,  8.954e-01,
     & 45.0,   1.290,  258.500,  6.960e-06,  1.300e-05,  1.741e+00,
     & 40.0,   2.530,  243.200,  1.450e-05,  4.100e-05,  3.625e+00,
     & 35.0,   5.180,  227.800,  3.170e-05,  9.200e-05,  7.924e+00,
     & 30.0,  11.100,  217.400,  7.130e-05,  1.900e-04,  1.783e+01,
     & 25.0,  24.300,  215.200,  1.580e-04,  3.400e-04,  3.950e+01,
     & 24.0,  28.600,  215.200,  1.850e-04,  3.600e-04,  4.624e+01,
     & 23.0,  33.400,  215.200,  2.170e-04,  3.900e-04,  5.415e+01,
     & 22.0,  39.100,  215.200,  2.540e-04,  4.300e-04,  6.338e+01,
     & 21.0,  45.800,  215.200,  2.970e-04,  4.300e-04,  7.421e+01,
     & 20.0,  53.700,  215.200,  3.480e-04,  4.500e-04,  8.690e+01,
     & 19.0,  62.800,  215.200,  4.070e-04,  4.300e-04,  1.017e+02,
     & 18.0,  73.500,  215.700,  4.750e-04,  4.100e-04,  1.188e+02,
     & 17.0,  86.100,  216.200,  5.550e-04,  3.900e-04,  1.388e+02,
     & 16.0, 100.700,  216.700,  6.480e-04,  3.600e-04,  1.620e+02 /

      data ( az(i,3), ap(i,3), at(i,3), arvden(i,3), ao3den(i,3), 
     & aden(i,3), i=18,33)/
     & 15.0, 117.800,  217.200,  7.640e-04,  3.400e-04,  1.890e+02,
     & 14.0, 137.800,  217.700,  1.130e-03,  3.200e-04,  2.206e+02,
     & 13.0, 161.000,  218.200,  1.720e-03,  3.000e-04,  2.572e+02,
     & 12.0, 188.200,  218.700,  2.720e-03,  2.600e-04,  2.999e+02,
     & 11.0, 219.900,  219.200,  4.440e-03,  2.100e-04,  3.496e+02,
     & 10.0, 256.800,  219.700,  7.500e-03,  1.600e-04,  4.072e+02,
     &  9.0, 299.200,  225.700,  1.600e-02,  1.200e-04,  4.619e+02,
     &  8.0, 347.300,  231.700,  3.500e-02,  9.000e-05,  5.222e+02,
     &  7.0, 401.600,  237.700,  8.570e-02,  7.700e-05,  5.886e+02,
     &  6.0, 462.700,  243.700,  1.890e-01,  6.400e-05,  6.614e+02,
     &  5.0, 531.300,  249.700,  3.780e-01,  5.800e-05,  7.411e+02,
     &  4.0, 608.100,  255.700,  6.900e-01,  4.900e-05,  8.282e+02,
     &  3.0, 693.800,  261.700,  1.160e+00,  4.900e-05,  9.230e+02,
     &  2.0, 789.700,  265.200,  1.800e+00,  4.900e-05,  1.037e+03,
     &  1.0, 897.300,  268.700,  2.500e+00,  5.400e-05,  1.162e+03,
     &  0.0,1018.000,  272.200,  3.500e+00,  6.000e-05,  1.301e+03 /

c            subarctic summer

      data ( az(i,4), ap(i,4), at(i,4), arvden(i,4), ao3den(i,4), 
     & aden(i,4), i=1,17)/
     &100.0,   0.001,  210.000,  2.000e-09,  4.300e-11,  5.000e-04,
     & 70.0,   0.071,  216.000,  2.830e-07,  8.600e-08,  7.071e-02,
     & 50.0,   0.987,  277.000,  3.950e-06,  4.300e-06,  9.868e-01,
     & 45.0,   1.810,  274.000,  7.270e-06,  1.300e-05,  1.817e+00,
     & 40.0,   3.400,  262.000,  1.360e-05,  4.100e-05,  3.404e+00,
     & 35.0,   6.610,  247.000,  2.650e-05,  9.200e-05,  6.614e+00,
     & 30.0,  13.400,  235.000,  5.350e-05,  1.400e-04,  1.338e+01,
     & 25.0,  27.800,  228.000,  1.700e-04,  2.600e-04,  4.247e+01,
     & 24.0,  32.270,  226.000,  1.990e-04,  2.800e-04,  4.963e+01,
     & 23.0,  37.500,  225.000,  2.320e-04,  3.000e-04,  5.805e+01,
     & 22.0,  43.600,  225.000,  2.700e-04,  3.200e-04,  6.750e+01,
     & 21.0,  50.700,  225.000,  3.140e-04,  3.600e-04,  7.849e+01,
     & 20.0,  58.900,  225.000,  3.650e-04,  3.900e-04,  9.128e+01,
     & 19.0,  68.600,  225.000,  4.330e-04,  4.100e-04,  1.062e+02,
     & 18.0,  79.800,  225.000,  4.940e-04,  4.100e-04,  1.235e+02,
     & 17.0,  92.800,  225.000,  5.740e-04,  3.900e-04,  1.436e+02,
     & 16.0, 108.010,  225.000,  6.680e-04,  3.400e-04,  1.671e+02 /

      data ( az(i,4), ap(i,4), at(i,4), arvden(i,4), ao3den(i,4), 
     & aden(i,4), i=18,33)/
     & 15.0, 125.000,  225.000,  7.770e-04,  3.200e-04,  1.943e+02,
     & 14.0, 146.000,  225.000,  1.020e-03,  2.800e-04,  2.260e+02,
     & 13.0, 170.000,  225.000,  2.060e-03,  2.600e-04,  2.630e+02,
     & 12.0, 197.700,  225.000,  4.200e-03,  2.100e-04,  3.059e+02,
     & 11.0, 230.000,  225.000,  8.560e-03,  1.800e-04,  3.559e+02,
     & 10.0, 267.700,  225.000,  1.750e-02,  1.300e-04,  4.142e+02,
     &  9.0, 310.700,  232.000,  4.180e-02,  1.100e-04,  4.663e+02,
     &  8.0, 359.000,  239.000,  1.300e-01,  7.900e-05,  5.231e+02,
     &  7.0, 413.000,  246.000,  2.900e-01,  7.500e-05,  5.849e+02,
     &  6.0, 473.000,  253.000,  5.430e-01,  7.100e-05,  6.519e+02,
     &  5.0, 541.000,  260.000,  9.730e-01,  6.400e-05,  7.244e+02,
     &  4.0, 616.000,  266.000,  1.650e+00,  6.000e-05,  8.077e+02,
     &  3.0, 700.000,  271.000,  2.690e+00,  5.800e-05,  8.985e+02,
     &  2.0, 792.900,  276.000,  4.200e+00,  5.600e-05,  9.971e+02,
     &  1.0, 896.000,  282.000,  6.000e+00,  5.400e-05,  1.110e+03,
     &  0.0,1010.000,  287.000,  9.100e+00,  4.900e-05,  1.220e+03 /

c            subarctic winter

      data ( az(i,5), ap(i,5), at(i,5), arvden(i,5), ao3den(i,5), 
     & aden(i,5), i=1,17)/
     &100.0,   0.001,  210.000,  2.000e-09,  4.300e-11,  5.000e-04,
     & 70.0,   0.040,  245.700,  2.280e-07,  8.600e-08,  5.695e-02,
     & 50.0,   0.572,  259.300,  3.070e-06,  4.300e-06,  7.682e-01,
     & 45.0,   1.113,  247.000,  6.280e-06,  1.300e-05,  1.569e+00,
     & 40.0,   2.243,  234.700,  1.330e-05,  4.100e-05,  3.330e+00,
     & 35.0,   4.701,  222.200,  2.950e-05,  9.200e-05,  7.368e+00,
     & 30.0,  10.200,  216.000,  6.580e-05,  1.500e-04,  1.645e+01,
     & 25.0,  22.560,  211.200,  1.490e-04,  3.200e-04,  3.722e+01,
     & 24.0,  26.490,  211.800,  1.740e-04,  3.600e-04,  4.358e+01,
     & 23.0,  31.090,  212.400,  2.040e-04,  4.300e-04,  5.100e+01,
     & 22.0,  36.470,  213.000,  2.390e-04,  4.700e-04,  5.966e+01,
     & 21.0,  42.770,  213.600,  2.790e-04,  5.100e-04,  6.976e+01,
     & 20.0,  50.140,  214.100,  3.260e-04,  5.600e-04,  8.155e+01,
     & 19.0,  58.750,  214.800,  3.810e-04,  6.000e-04,  9.529e+01,
     & 18.0,  68.820,  215.400,  4.450e-04,  6.200e-04,  1.113e+02,
     & 17.0,  80.580,  216.000,  5.200e-04,  6.200e-04,  1.300e+02,
     & 16.0,  94.310,  216.600,  6.070e-04,  6.200e-04,  1.517e+02 /

      data ( az(i,5), ap(i,5), at(i,5), arvden(i,5), ao3den(i,5), 
     & aden(i,5), i=18,33)/
     & 15.0, 110.300,  217.200,  7.330e-04,  5.600e-04,  1.770e+02,
     & 14.0, 129.100,  217.200,  1.100e-03,  4.900e-04,  2.071e+02,
     & 13.0, 151.000,  217.200,  1.670e-03,  4.700e-04,  2.422e+02,
     & 12.0, 176.600,  217.200,  2.580e-03,  4.300e-04,  2.834e+02,
     & 11.0, 206.700,  217.200,  3.790e-03,  3.200e-04,  3.315e+02,
     & 10.0, 241.800,  217.200,  5.510e-03,  2.400e-04,  3.879e+02,
     &  9.0, 282.900,  217.200,  8.370e-03,  1.600e-04,  4.538e+02,
     &  8.0, 330.800,  220.600,  1.320e-02,  9.000e-05,  5.226e+02,
     &  7.0, 385.300,  227.300,  3.290e-02,  7.100e-05,  5.904e+02,
     &  6.0, 446.700,  234.100,  9.780e-02,  4.900e-05,  6.646e+02,
     &  5.0, 515.800,  240.900,  2.340e-01,  4.700e-05,  7.457e+02,
     &  4.0, 593.200,  247.700,  4.590e-01,  4.500e-05,  8.339e+02,
     &  3.0, 679.800,  252.700,  7.470e-01,  4.300e-05,  9.366e+02,
     &  2.0, 777.500,  255.900,  1.030e+00,  4.100e-05,  1.058e+03,
     &  1.0, 887.800,  259.100,  1.200e+00,  4.100e-05,  1.193e+03,
     &  0.0,1013.000,  257.100,  1.200e+00,  4.100e-05,  1.372e+03 /


      itype  = 0
      if( ctype(1:4).eq.'trop' ) itype  = 1
      if( ctype(1:4).eq.'mids' ) itype  = 2
      if( ctype(1:4).eq.'midw' ) itype  = 3
      if( ctype(1:4).eq.'subs' ) itype  = 4
      if( ctype(1:4).eq.'subw' ) itype  = 5
      if( itype .eq. 0 )
     &    call errmsg( 'mccla--bad input arg ctype',.true.)

      do 10 i = np, 1, - 1

         z( np - i + 1 )     = 1000.*az( i, itype )
         p( np - i + 1 )     = 100.*ap( i, itype )
         t( np - i + 1 )     = at( i, itype )
         rvden( np - i + 1 ) = 1.e-3 * arvden( i, itype )
         o3den( np - i + 1 ) = 1.e-3 * ao3den( i, itype )
         den( np - i + 1 )   = 1.e-3 * aden( i, itype )

   10 continue

      end

      subroutine  errmsg( messag, fatal )

c        print out a warning or error message;  abort if error

      logical       fatal, msglim
      character*(*) messag
      integer       maxmsg, nummsg
      save          maxmsg, nummsg, msglim
      data nummsg / 0 /,  maxmsg / 100 /,  msglim / .false. /


      if ( fatal )  then
         write ( *, '(//,2a,//)' )  ' ******* error >>>>>>  ', messag
         stop
      end if

      nummsg = nummsg + 1
      if( msglim )  return

      if ( nummsg.le.maxmsg )  then
         write ( *, '(/,2a,/)' )  ' ******* warning >>>>>>  ', messag
      else
         write ( *,99 )
         msglim = .true.
      endif

      return

   99 format( //,' >>>>>>  too many warning messages --  ',
     $   'they will no longer be printed  <<<<<<<', // )
      end

